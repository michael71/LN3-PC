/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * SettingsUI.java
 *
 * Created on 20.04.2011, 07:17:22
 */
package de.blankedv.ln3pc;

import javax.swing.JOptionPane;

import java.util.Enumeration;
import java.util.prefs.Preferences;
import static de.blankedv.ln3pc.MainUI.*;
import java.io.File;
import purejavacomm.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mblank
 */
public class SettingsUI extends javax.swing.JFrame {

    Preferences prefs = Preferences.userNodeForPackage(this.getClass());

    /**
     * Creates new form SettingsUI
     */
    public SettingsUI() {
        initComponents();

        refreshSerialPortList();

        String ifType = prefs.get("type", "LocoBuffer USB");
        String baudStr = prefs.get("baudrate", "57600");

        for (int i = 0; i < comboSelectType.getItemCount(); i++) {
            //if (DEBUG) { System.out.println("geladen Type-String="+ 
            // comboSelectType.getItemAt(i).toString() + " typePrefs="+ifType+"."); }
            if (comboSelectType.getItemAt(i).toString().equalsIgnoreCase(ifType)) {
                comboSelectType.setSelectedIndex(i);
                //  System.out.println("found "+i);
                break;
            }
        }
        for (int i = 0; i < cbBaudrate.getItemCount(); i++) {
            if (cbBaudrate.getItemAt(i).toString().equalsIgnoreCase(baudStr)) {
                cbBaudrate.setSelectedIndex(i);
                break;
            }
        }
       

        cbSimulation.setSelected(prefs.getBoolean("simulation", false));

        cbDebug.setSelected(prefs.getBoolean("enableDebug", false));

        String fname = prefs.get("configfilename","-keiner-");
        if (fname.length() > 60) {
            String fname1 = fname.substring(0,59);
            String fname2 = fname.substring(60);
             txtConfigFilename.setText(fname1+"\n"+fname2);
        } else {
        txtConfigFilename.setText(fname);
        }
                String locoFname = prefs.get("locofilename", "-keiner-");
        if (locoFname.length() > 60) {
            String lfname1 = locoFname.substring(0, 59);
            String lfname2 = locoFname.substring(60);
            txtConfigFilename.setText(lfname1 + "\n" + lfname2);
        } else {
            txtConfigFilename.setText(fname);
        }
        if (myip.isEmpty()) {
            lblConfigFilenameHelp.setText("download von http://hostname:8000/config");           
        } else {
            lblConfigFilenameHelp.setText("download von http:/" + myip.get(0).toString() + ":8000/config");
        }


        loadPrefs();

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        comboSelectSerialPort = new javax.swing.JComboBox<>();
        cbBaudrate = new javax.swing.JComboBox();
        lblSerial = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboSelectType = new javax.swing.JComboBox();
        cbSimulation = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbDebug = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        txtConfigFilename = new javax.swing.JTextArea();
        lblConfigFilenameHelp = new javax.swing.JLabel();
        btnChangeConfigFile = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Einstellungen");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnSave.setText("Speichern + neu Laden");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Zur√ºck");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selectrix Interface", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 15))); // NOI18N

        comboSelectSerialPort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbBaudrate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "19200", "57600", "115200" }));
        cbBaudrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBaudrateActionPerformed(evt);
            }
        });

        lblSerial.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lblSerial.setText("Serielle Schnittstelle");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel2.setText("Type");

        comboSelectType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LocoBuffer USB" }));
        comboSelectType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSelectTypeActionPerformed(evt);
            }
        });

        cbSimulation.setText("Simulation");
        cbSimulation.setEnabled(false);
        cbSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSimulationActionPerformed(evt);
            }
        });

        jLabel1.setText("baud");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSelectSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(comboSelectType, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSimulation)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(cbSimulation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblSerial))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSelectSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSelectType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(74, 74, 74))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cbDebug.setText("Debug Mode");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbDebug)
                .addContainerGap(483, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbDebug)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Anlagen-XML-ConfigFile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        txtConfigFilename.setEditable(false);
        txtConfigFilename.setBackground(java.awt.SystemColor.controlHighlight);
        txtConfigFilename.setColumns(20);
        txtConfigFilename.setRows(3);

        lblConfigFilenameHelp.setText("-keiner-");

        btnChangeConfigFile.setText("√§ndern");
        btnChangeConfigFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeConfigFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblConfigFilenameHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtConfigFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChangeConfigFile, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtConfigFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblConfigFilenameHelp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnChangeConfigFile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        prefs.put("type", comboSelectType.getSelectedItem().toString());
        prefs.put("baudrate", cbBaudrate.getSelectedItem().toString());
        prefs.putBoolean("simulation", cbSimulation.isSelected());
        prefs.putBoolean("enableDebug", cbDebug.isSelected());

        if (comboSelectSerialPort.getItemCount() >= 1) {
            prefs.put("commPort", comboSelectSerialPort.getSelectedItem().toString());
        } else {
            prefs.put("commPort", "");
        }

        if (DEBUG) {
            System.out.println("saving Settings");
            if (comboSelectSerialPort.getItemCount() >= 1) {
                System.out.println("saving Port=" + comboSelectSerialPort.getSelectedItem().toString());
            }
            System.out.println("saving Baudrate=" + cbBaudrate.getSelectedItem().toString());
            System.out.println("saving Type=" + comboSelectType.getSelectedItem().toString());
            System.out.println("saving Simulation=" + cbSimulation.isSelected());
            System.out.println("saving enableDebug=" + cbDebug.isSelected());
            System.out.println("configfilename=" + prefs.get("configfilename", "-keiner-"));
  
        }

        //JOptionPane.showMessageDialog(this, "Needs Restart");
        mainui.reloadSettings();
        
        settingsWindow = null;
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        settingsWindow = null;
        dispose();

    }//GEN-LAST:event_btnCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        settingsWindow = null;
    }//GEN-LAST:event_formWindowClosing

    private void cbSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSimulationActionPerformed
    }//GEN-LAST:event_cbSimulationActionPerformed

    private void cbBaudrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBaudrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBaudrateActionPerformed

    private void comboSelectTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSelectTypeActionPerformed

    }//GEN-LAST:event_comboSelectTypeActionPerformed

    private void btnChangeConfigFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeConfigFileActionPerformed
        JFileChooser chooser = new JFileChooser();
        File curDir = new File (prefs.get("configdir", System.getProperty("user.home")));
        chooser.setCurrentDirectory(curDir);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "xml", "XML");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String fname = chooser.getSelectedFile().getAbsolutePath();
            prefs.put("configfilename", fname);
            curDir = chooser.getCurrentDirectory();
            prefs.put("configdir", curDir.getAbsolutePath());
            System.out.println("You chose to open this file: "
                    + chooser.getSelectedFile().getAbsolutePath());
            txtConfigFilename.setText(prefs.get("configfilename", "-keiner-"));

        }
    }//GEN-LAST:event_btnChangeConfigFileActionPerformed

    private void i18n() {
        this.setTitle("Settings");

        lblSerial.setText("Select Serial Port");

        btnSave.setText("Save Settings");
        btnCancel.setText("Cancel");

    }

    private void loadPrefs() {
        prefs.getInt("Sett.windowX", getX());
        prefs.getInt("Sett.windowY", getY());

    }

    private void savePrefs() {
        prefs.putInt("Sett.windowX", getX());
        prefs.putInt("Sett.windowY", getY());
    }

    public void refreshSerialPortList() {
        if (DEBUG) {
            System.out.println("refreshing serial port list");
        }

        int count = 0;
        CommPortIdentifier serialPortId;
        Enumeration enumComm;
        comboSelectSerialPort.removeAllItems();
        
        if (serialIF.isConnected() && (!serialIF.getPortName().isEmpty())) {
            comboSelectSerialPort.addItem(serialIF.getPortName());
        }

        enumComm = CommPortIdentifier.getPortIdentifiers();
        while (enumComm.hasMoreElements()) {
            serialPortId = (CommPortIdentifier) enumComm.nextElement();
            if (serialPortId.getPortType() == CommPortIdentifier.PORT_SERIAL) {
                if (DEBUG) {
                    System.out.println("Port Found:" + serialPortId.getName() + " index=" + count);
                }
                comboSelectSerialPort.addItem(serialPortId.getName());
                count++;
            }
        }
        if (count == 0) {
            System.out.println("no serial port found");
        }

        String commPortPref = prefs.get("commPort", "");
        for (int i = 0; i < comboSelectSerialPort.getItemCount(); i++) {
            if (comboSelectSerialPort.getItemAt(i).equalsIgnoreCase(commPortPref)) {
                comboSelectSerialPort.setSelectedIndex(i);
                break;
            }
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangeConfigFile;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbBaudrate;
    private javax.swing.JCheckBox cbDebug;
    private javax.swing.JCheckBox cbSimulation;
    private javax.swing.JComboBox<String> comboSelectSerialPort;
    private javax.swing.JComboBox comboSelectType;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblConfigFilenameHelp;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JTextArea txtConfigFilename;
    // End of variables declaration//GEN-END:variables

}
